StockDeductionTrigger.apxt
trigger StockDeductionTrigger on HandsMen_Order__c (after insert, after update) {
    
    Set<Id> productIds = new Set<Id>();

    // Step 1: Collect product IDs for NEWLY confirmed orders only
    for (HandsMen_Order__c order : Trigger.new) {
        HandsMen_Order__c oldOrder = Trigger.isUpdate ? Trigger.oldMap.get(order.Id) : null;
        
        Boolean isNewlyConfirmed = order.Status__c == 'Confirmed' && 
                                   (Trigger.isInsert || oldOrder.Status__c != 'Confirmed');
        
        if (isNewlyConfirmed && order.HandsMen_Product__c != null) {
            productIds.add(order.HandsMen_Product__c);
        }
    }

    if (productIds.isEmpty()) {
        return; // Nothing to process
    }

    // Step 2: Query Inventory records for those products
    Map<Id, Inventory__c> inventoryMap = new Map<Id, Inventory__c>(
        [SELECT Id, Stock_Quantity__c, HandsMen_Product__c 
         FROM Inventory__c 
         WHERE HandsMen_Product__c IN :productIds]
    );

    List<Inventory__c> inventoriesToUpdate = new List<Inventory__c>();

    // Step 3: Deduct stock based on matching product
    for (HandsMen_Order__c order : Trigger.new) {
        HandsMen_Order__c oldOrder = Trigger.isUpdate ? Trigger.oldMap.get(order.Id) : null;
        
        Boolean isNewlyConfirmed = order.Status__c == 'Confirmed' && 
                                   (Trigger.isInsert || oldOrder.Status__c != 'Confirmed');
        
        if (isNewlyConfirmed && order.HandsMen_Product__c != null && order.Quantity__c != null) {
            Inventory__c inv = inventoryMap.get(order.HandsMen_Product__c);
            if (inv != null) {
                inv.Stock_Quantity__c = (inv.Stock_Quantity__c != null ? inv.Stock_Quantity__c : 0) - order.Quantity__c;
                inventoriesToUpdate.add(inv);
            }
        }
    }

    // Step 4: Update Inventories in bulk
    if (!inventoriesToUpdate.isEmpty()) {
        update inventoriesToUpdate;
    }
}